// tslint:disable
/**
 * Conduit API
 * Conduit API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs'
import {
  BaseAPI,
  HttpHeaders,
  throwIfNullOrUndefined,
  encodeURI,
  OperationOpts,
  RawAjaxResponse,
} from '../runtime'
import { GenericErrorModel, ProfileResponse } from '../models'

export interface FollowUserByUsernameRequest {
  username: string
}

export interface GetProfileByUsernameRequest {
  username: string
}

export interface UnfollowUserByUsernameRequest {
  username: string
}

/**
 * no description
 */
export class ProfileApi extends BaseAPI {
  /**
   * Follow a user by username
   * Follow a user
   */
  followUserByUsername({
    username,
  }: FollowUserByUsernameRequest): Observable<ProfileResponse>
  followUserByUsername(
    { username }: FollowUserByUsernameRequest,
    opts?: OperationOpts
  ): Observable<RawAjaxResponse<ProfileResponse>>
  followUserByUsername(
    { username }: FollowUserByUsernameRequest,
    opts?: OperationOpts
  ): Observable<ProfileResponse | RawAjaxResponse<ProfileResponse>> {
    throwIfNullOrUndefined(username, 'username', 'followUserByUsername')

    const headers: HttpHeaders = {
      ...(this.configuration.apiKey && {
        Authorization: this.configuration.apiKey('Authorization'),
      }), // Token authentication
    }

    return this.request<ProfileResponse>(
      {
        url: '/profiles/{username}/follow'.replace(
          '{username}',
          encodeURI(username)
        ),
        method: 'POST',
        headers,
      },
      opts?.responseOpts
    )
  }

  /**
   * Get a profile of a user of the system. Auth is optional
   * Get a profile
   */
  getProfileByUsername({
    username,
  }: GetProfileByUsernameRequest): Observable<ProfileResponse>
  getProfileByUsername(
    { username }: GetProfileByUsernameRequest,
    opts?: OperationOpts
  ): Observable<RawAjaxResponse<ProfileResponse>>
  getProfileByUsername(
    { username }: GetProfileByUsernameRequest,
    opts?: OperationOpts
  ): Observable<ProfileResponse | RawAjaxResponse<ProfileResponse>> {
    throwIfNullOrUndefined(username, 'username', 'getProfileByUsername')

    return this.request<ProfileResponse>(
      {
        url: '/profiles/{username}'.replace('{username}', encodeURI(username)),
        method: 'GET',
      },
      opts?.responseOpts
    )
  }

  /**
   * Unfollow a user by username
   * Unfollow a user
   */
  unfollowUserByUsername({
    username,
  }: UnfollowUserByUsernameRequest): Observable<ProfileResponse>
  unfollowUserByUsername(
    { username }: UnfollowUserByUsernameRequest,
    opts?: OperationOpts
  ): Observable<RawAjaxResponse<ProfileResponse>>
  unfollowUserByUsername(
    { username }: UnfollowUserByUsernameRequest,
    opts?: OperationOpts
  ): Observable<ProfileResponse | RawAjaxResponse<ProfileResponse>> {
    throwIfNullOrUndefined(username, 'username', 'unfollowUserByUsername')

    const headers: HttpHeaders = {
      ...(this.configuration.apiKey && {
        Authorization: this.configuration.apiKey('Authorization'),
      }), // Token authentication
    }

    return this.request<ProfileResponse>(
      {
        url: '/profiles/{username}/follow'.replace(
          '{username}',
          encodeURI(username)
        ),
        method: 'DELETE',
        headers,
      },
      opts?.responseOpts
    )
  }
}
